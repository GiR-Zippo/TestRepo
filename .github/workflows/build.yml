name: Build

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  build:    
    runs-on: windows-latest
    
    steps:      
      - uses: actions/checkout@v2
    
      #Remove if not needed, clone the LA project and get seer
      - name: Clone LA Repository
        run: git clone https://github.com/GiR-Zippo/LightAmp.git

      - name: Compare SEER Folder
        run: |
          $Folder1 = Get-childitem ".\BardMusicPlayer.Seer"
          $Folder2 = Get-childitem  ".\LightAmp/BardMusicPlayer.Seer"
          Compare-Object $Folder1 $Folder2 -Property Name, Length > changed.txt

      - name: Check for output
        id: "compare"
        run: if (Get-Content .\changed.txt){echo "CHANGED=true" >> $env:GITHUB_OUTPUT}else{echo "CHANGED=false" >> $env:GITHUB_OUTPUT}

      - if: steps.compare.outputs.CHANGED  == 'false'
        name: IF
        run: echo "No SEER-Update needed"

      #Remove if not needed: Copy new SEER and delete the LA folder
      - if: steps.compare.outputs.CHANGED  == 'true'
        name: IF NOT
        run: |
         echo "Updating SEER"
         echo "Changed files"
         cat changed.txt
         Remove-Item -Recurse -Force BardMusicPlayer.Seer
         New-Item -Force -Type Directory BardMusicPlayer.Seer
         Copy-Item -Force -Recurse LightAmp/BardMusicPlayer.Seer/* BardMusicPlayer.Seer
         Remove-Item -Recurse -Force LightAmp
         ls
         
      - name: Bump build version
        id: bump
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "BardMusicPlayer/BardMusicPlayer.csproj"
          version: bump-build

      - uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: BardMusicPlayer/BardMusicPlayer.csproj
      - run: echo "${{steps.get-version.outputs.version}}"
      - run: echo "${{steps.get-version.outputs.version-prefix}}" 
      - run: echo "${{steps.get-version.outputs.version-suffix}}" 
      - run: echo "${{steps.get-version.outputs.package-version}}" 
      - run: echo "${{steps.get-version.outputs.assembly-version}}" 
      - run: echo "${{steps.get-version.outputs.file-version}}" 
      - run: echo "${{steps.get-version.outputs.informational-version}}"


      #- uses: stefanzweifel/git-auto-commit-action@v5
      #  with:
      #    commit_message: Automated Change

